{"resolvedId":"E:/Project/www/wwwroot/vite/project-shangpinhui/src/stores/user.ts","transforms":[{"name":"__load__","result":"import { defineStore } from 'pinia'\r\nimport { reqGetCode, reqUserInfo, reqUserLogin, reqUserLogout, reqUserRegister } from '@/api/index'\r\nimport type { userInfo_type } from './type/userInfo_type'\r\nimport { setToken, getToken, removeToken } from '@/utils/token'\r\n\r\nexport const useUserStore = defineStore({\r\n  id: 'user',\r\n  state: () => {\r\n    return {\r\n      code: '',\r\n      token: getToken(),\r\n      userInfo: <userInfo_type>{},\r\n    }\r\n  },\r\n  getters: {},\r\n  actions: {\r\n    //* 获取验证码\r\n    async getCode(phone: string) {\r\n      let result = await reqGetCode(phone)\r\n      if (result.code == 200) {\r\n        this.code = result.data\r\n        return 'ok'\r\n      } else {\r\n        return Promise.reject(new Error('faile'))\r\n      }\r\n    },\r\n    //* 用户注册\r\n    async userRegister(user: any) {\r\n      let result = await reqUserRegister(user)\r\n      if (result.code == 200) {\r\n        return 'ok'\r\n      } else {\r\n        return Promise.reject(new Error('faile'))\r\n      }\r\n    },\r\n    //* 用户登录\r\n    async userLogin(user: any) {\r\n      let result = await reqUserLogin(user)\r\n      // 服务器下发的token,是用户信息的唯一标识\r\n      // 将来经常通过token着服务器要用户信息进行展示\r\n      if (result.code == 200) {\r\n        this.token = result.data.token\r\n        // 持久化存储token\r\n        setToken(result.data.token)\r\n        return 'ok'\r\n      } else {\r\n        return Promise.reject(new Error('faile'))\r\n      }\r\n    },\r\n    //* 获取用户信息\r\n    async getUserInfo() {\r\n      let result = await reqUserInfo()\r\n      if (result.code == 200) {\r\n        this.userInfo = result.data\r\n        return 'ok'\r\n      } else {\r\n        return Promise.reject(new Error('faile'))\r\n      }\r\n    },\r\n    //* 退出登录\r\n    async userLogout() {\r\n      let result = await reqUserLogout()\r\n      if (result.code == 200) {\r\n        //* 清除仓库数据\r\n        this.token = ''\r\n        this.userInfo = <userInfo_type>{}\r\n        //* 本地存储数据清空\r\n        removeToken()\r\n        return 'ok'\r\n      } else {\r\n        return Promise.reject(new Error('faile'))\r\n      }\r\n    },\r\n  },\r\n})\r\n","start":1663399017320,"end":1663399017320},{"name":"vite:esbuild","result":"import { defineStore } from \"pinia\";\nimport { reqGetCode, reqUserInfo, reqUserLogin, reqUserLogout, reqUserRegister } from \"@/api/index\";\nimport { setToken, getToken, removeToken } from \"@/utils/token\";\nexport const useUserStore = defineStore({\n  id: \"user\",\n  state: () => {\n    return {\n      code: \"\",\n      token: getToken(),\n      userInfo: {}\n    };\n  },\n  getters: {},\n  actions: {\n    async getCode(phone) {\n      let result = await reqGetCode(phone);\n      if (result.code == 200) {\n        this.code = result.data;\n        return \"ok\";\n      } else {\n        return Promise.reject(new Error(\"faile\"));\n      }\n    },\n    async userRegister(user) {\n      let result = await reqUserRegister(user);\n      if (result.code == 200) {\n        return \"ok\";\n      } else {\n        return Promise.reject(new Error(\"faile\"));\n      }\n    },\n    async userLogin(user) {\n      let result = await reqUserLogin(user);\n      if (result.code == 200) {\n        this.token = result.data.token;\n        setToken(result.data.token);\n        return \"ok\";\n      } else {\n        return Promise.reject(new Error(\"faile\"));\n      }\n    },\n    async getUserInfo() {\n      let result = await reqUserInfo();\n      if (result.code == 200) {\n        this.userInfo = result.data;\n        return \"ok\";\n      } else {\n        return Promise.reject(new Error(\"faile\"));\n      }\n    },\n    async userLogout() {\n      let result = await reqUserLogout();\n      if (result.code == 200) {\n        this.token = \"\";\n        this.userInfo = {};\n        removeToken();\n        return \"ok\";\n      } else {\n        return Promise.reject(new Error(\"faile\"));\n      }\n    }\n  }\n});\n","start":1663399017320,"end":1663399017386,"order":"normal"},{"name":"vite:import-analysis","result":"import { defineStore } from \"/node_modules/.vite/deps/pinia.js?v=a7e311b8\";\nimport { reqGetCode, reqUserInfo, reqUserLogin, reqUserLogout, reqUserRegister } from \"/src/api/index.ts\";\nimport { setToken, getToken, removeToken } from \"/src/utils/token.ts\";\nexport const useUserStore = defineStore({\n  id: \"user\",\n  state: () => {\n    return {\n      code: \"\",\n      token: getToken(),\n      userInfo: {}\n    };\n  },\n  getters: {},\n  actions: {\n    async getCode(phone) {\n      let result = await reqGetCode(phone);\n      if (result.code == 200) {\n        this.code = result.data;\n        return \"ok\";\n      } else {\n        return Promise.reject(new Error(\"faile\"));\n      }\n    },\n    async userRegister(user) {\n      let result = await reqUserRegister(user);\n      if (result.code == 200) {\n        return \"ok\";\n      } else {\n        return Promise.reject(new Error(\"faile\"));\n      }\n    },\n    async userLogin(user) {\n      let result = await reqUserLogin(user);\n      if (result.code == 200) {\n        this.token = result.data.token;\n        setToken(result.data.token);\n        return \"ok\";\n      } else {\n        return Promise.reject(new Error(\"faile\"));\n      }\n    },\n    async getUserInfo() {\n      let result = await reqUserInfo();\n      if (result.code == 200) {\n        this.userInfo = result.data;\n        return \"ok\";\n      } else {\n        return Promise.reject(new Error(\"faile\"));\n      }\n    },\n    async userLogout() {\n      let result = await reqUserLogout();\n      if (result.code == 200) {\n        this.token = \"\";\n        this.userInfo = {};\n        removeToken();\n        return \"ok\";\n      } else {\n        return Promise.reject(new Error(\"faile\"));\n      }\n    }\n  }\n});\n","start":1663399017392,"end":1663399017406,"order":"normal"}]}
