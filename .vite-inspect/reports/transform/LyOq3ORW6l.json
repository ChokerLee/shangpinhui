{"resolvedId":"E:/Project/www/wwwroot/vite/project-shangpinhui/src/stores/search.ts","transforms":[{"name":"__load__","result":"import { defineStore } from 'pinia'\r\nimport { reqCategoryList, reqGetSearchInfo } from '@/api'\r\nimport type { CategoryList } from './type/categoryList_type'\r\nimport type { search_type, searchList } from '@/stores/type/search_type'\r\n\r\nexport const useSearchStore = defineStore({\r\n  id: 'search',\r\n  state: () => {\r\n    return {\r\n      //* state中数据默认初始值别瞎写，服务器返回什么数据类型就定义什么数据类型\r\n      categoryList: <CategoryList[]>[],\r\n      searchList: <searchList.RootObject>{},\r\n    }\r\n  },\r\n  getters: {\r\n    goodsList: (state) => {\r\n      //* 至少返回一个数组\r\n      return state.searchList.goodsList || []\r\n    },\r\n    trademarkList: (state) => {\r\n      return state.searchList.trademarkList || []\r\n    },\r\n    attrsList: (state) => {\r\n      return state.searchList.attrsList || []\r\n    },\r\n  },\r\n  actions: {\r\n    //* 获取列表数据\r\n    async getCategoryList() {\r\n      let result = await reqCategoryList()\r\n      if (result.code === 200) {\r\n        this.categoryList = result.data\r\n        //* 数据多了一条，临时处理\r\n        this.categoryList.pop()\r\n      }\r\n    },\r\n    //* 获取搜索数据\r\n    async getSearchInfo(params: search_type = {}) {\r\n      let result = await reqGetSearchInfo(params)\r\n      if (result.code === 200) {\r\n        this.searchList = result.data\r\n      }\r\n    },\r\n  },\r\n})\r\n","start":1663399017299,"end":1663399017299},{"name":"vite:esbuild","result":"import { defineStore } from \"pinia\";\nimport { reqCategoryList, reqGetSearchInfo } from \"@/api\";\nexport const useSearchStore = defineStore({\n  id: \"search\",\n  state: () => {\n    return {\n      categoryList: [],\n      searchList: {}\n    };\n  },\n  getters: {\n    goodsList: (state) => {\n      return state.searchList.goodsList || [];\n    },\n    trademarkList: (state) => {\n      return state.searchList.trademarkList || [];\n    },\n    attrsList: (state) => {\n      return state.searchList.attrsList || [];\n    }\n  },\n  actions: {\n    async getCategoryList() {\n      let result = await reqCategoryList();\n      if (result.code === 200) {\n        this.categoryList = result.data;\n        this.categoryList.pop();\n      }\n    },\n    async getSearchInfo(params = {}) {\n      let result = await reqGetSearchInfo(params);\n      if (result.code === 200) {\n        this.searchList = result.data;\n      }\n    }\n  }\n});\n","start":1663399017299,"end":1663399017386,"order":"normal"},{"name":"vite:import-analysis","result":"import { defineStore } from \"/node_modules/.vite/deps/pinia.js?v=a7e311b8\";\nimport { reqCategoryList, reqGetSearchInfo } from \"/src/api/index.ts\";\nexport const useSearchStore = defineStore({\n  id: \"search\",\n  state: () => {\n    return {\n      categoryList: [],\n      searchList: {}\n    };\n  },\n  getters: {\n    goodsList: (state) => {\n      return state.searchList.goodsList || [];\n    },\n    trademarkList: (state) => {\n      return state.searchList.trademarkList || [];\n    },\n    attrsList: (state) => {\n      return state.searchList.attrsList || [];\n    }\n  },\n  actions: {\n    async getCategoryList() {\n      let result = await reqCategoryList();\n      if (result.code === 200) {\n        this.categoryList = result.data;\n        this.categoryList.pop();\n      }\n    },\n    async getSearchInfo(params = {}) {\n      let result = await reqGetSearchInfo(params);\n      if (result.code === 200) {\n        this.searchList = result.data;\n      }\n    }\n  }\n});\n","start":1663399017392,"end":1663399017401,"order":"normal"}]}
